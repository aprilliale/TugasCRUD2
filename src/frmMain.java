
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author rongrong
 */
public class frmMain extends javax.swing.JFrame {

    /**
     * Creates new form frmMain
     */
    public frmMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        penulis = new javax.swing.JTextField();
        fiksi = new javax.swing.JRadioButton();
        nonfiksi = new javax.swing.JRadioButton();
        tahun = new javax.swing.JTextField();
        penerbit = new javax.swing.JTextField();
        judul = new javax.swing.JTextField();
        save = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        refresh = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tData = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        sinopsis = new javax.swing.JTextArea();
        nomor = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);
        getContentPane().add(penulis);
        penulis.setBounds(230, 430, 270, 30);

        buttonGroup1.add(fiksi);
        fiksi.setText("Fiksi");
        getContentPane().add(fiksi);
        fiksi.setBounds(160, 380, 150, 23);

        buttonGroup1.add(nonfiksi);
        nonfiksi.setText("Nonfiksi");
        getContentPane().add(nonfiksi);
        nonfiksi.setBounds(330, 380, 170, 23);
        getContentPane().add(tahun);
        tahun.setBounds(230, 310, 270, 30);
        getContentPane().add(penerbit);
        penerbit.setBounds(230, 250, 270, 30);
        getContentPane().add(judul);
        judul.setBounds(230, 200, 270, 30);

        save.setBackground(new java.awt.Color(0, 153, 153));
        save.setText("SAVE");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        getContentPane().add(save);
        save.setBounds(540, 260, 120, 50);

        edit.setBackground(new java.awt.Color(0, 153, 153));
        edit.setText("EDIT");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        getContentPane().add(edit);
        edit.setBounds(840, 260, 120, 50);

        delete.setBackground(new java.awt.Color(0, 153, 153));
        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete);
        delete.setBounds(840, 440, 120, 50);

        clear.setBackground(new java.awt.Color(0, 153, 153));
        clear.setText("CLEAR");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        getContentPane().add(clear);
        clear.setBounds(690, 260, 120, 50);

        refresh.setBackground(new java.awt.Color(0, 153, 153));
        refresh.setText("REFRESH");
        refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshActionPerformed(evt);
            }
        });
        getContentPane().add(refresh);
        refresh.setBounds(710, 440, 120, 50);

        tData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "NOMOR", "JUDUL", "PENERBIT", "TAHUN TERBIT", "GENRE", "PENULIS", "SINOPSIS"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tDataMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tData);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(30, 500, 930, 402);

        sinopsis.setColumns(20);
        sinopsis.setRows(5);
        jScrollPane1.setViewportView(sinopsis);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(540, 150, 420, 96);
        getContentPane().add(nomor);
        nomor.setBounds(230, 140, 270, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/perpus2.jpg"))); // NOI18N
        getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 520, 1020, 430);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/perpus1.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -10, 1000, 560);

        setBounds(0, 0, 1011, 984);
    }// </editor-fold>//GEN-END:initComponents

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        if("".equals(nomor.getText()) || "".equals(penerbit.getText()) || "".equals(tahun.getText())
            || "".equals(judul.getText()) || "".equals(penulis.getText()) || "".equals(sinopsis.getText()))
        {
            JOptionPane.showMessageDialog(this, "Harap lengkapi Data", "Error", JOptionPane.WARNING_MESSAGE);
        }
        else {
            String genre ="";
            if (fiksi.isSelected()){
                genre ="Fiksi";
            }else {
                genre ="Nonfiksi";
            }
            String SQL = "INSERT INTO tb_buku (no,buku,penerbit,tahun,genre,penulis,sinopsis) "
            + "VALUES ('"+nomor.getText()+"','"+judul.getText()+"','"+penerbit.getText()+"','"
            +tahun.getText()+"','"+genre+"','"+penulis.getText()+"','"
            +sinopsis.getText()+"')";
            int status = KoneksiDB.execute(SQL);
            if(status == 1){
                JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                selectData();
            }
            else{
                JOptionPane.showMessageDialog(this, "Data gagal ditambahkan", "Gagal", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_saveActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        nomor.setText("");
        judul.setText("");
        penerbit.setText("");
        buttonGroup1.clearSelection();
        tahun.setText("");
        penulis.setText("");
        sinopsis.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        if("".equals(nomor.getText()) || "".equals(judul.getText()) || "".equals(penerbit.getText())
            || "".equals(tahun.getText()) || "".equals(penulis.getText()) || "".equals(sinopsis.getText()))
        {
            JOptionPane.showMessageDialog(this, "Harap Lengkapi Data", "Error", JOptionPane.WARNING_MESSAGE);
        }else{
            String genre = "";
            if(fiksi.isSelected()){
                genre = "Fiksi";
            } else {
                genre = "Nonfiksi";
            }
            String SQL = "UPDATE tb_buku SET "
            //+"no='"+nomor.getText()+"', "
            +"buku='"+judul.getText()+"', "
            +"penerbit='"+penerbit.getText()+"', "
            +"tahun='"+tahun.getText()+"', "
            +"penulis='"+penulis.getText()+"', "
            +"genre='"+genre+"', "
            +"sinopsis='"+sinopsis.getText()
            +"' WHERE no='"+nomor.getText()+"'";
            int status = KoneksiDB.execute(SQL);
            if(status==1){
                JOptionPane.showMessageDialog(this, "Data berhasil diupdate", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                selectData();
            }else{
                JOptionPane.showMessageDialog(this, "Data gagal diupdate", "Sukses", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_editActionPerformed

    private void refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshActionPerformed
        // TODO add your handling code here:
        selectData();
    }//GEN-LAST:event_refreshActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        int baris = tData.getSelectedRow();
        if(baris != -1){
            String no = tData.getValueAt(baris, 0).toString();
            String SQL = "DELETE FROM tb_buku WHERE no='"+no+"'";
            int status = KoneksiDB.execute(SQL);
            if(status==1){
                JOptionPane.showMessageDialog(this, "Data berhasil dihapus", "Sukses", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(this, "Data gagal dihapus", "Gagal", JOptionPane.WARNING_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Pilih baris data terlebih dahulu", "Error", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void tDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tDataMouseClicked
        // TODO add your handling code here:
        int baris = tData.getSelectedRow();
        if(baris != -1){
            nomor.setText(tData.getValueAt(baris, 0).toString());
            judul.setText(tData.getValueAt(baris, 1).toString());
            penerbit.setText(tData.getValueAt(baris, 2).toString());
            tahun.setText(tData.getValueAt(baris, 3).toString());
            if("Fiksi".equals(tData.getValueAt(baris, 4).toString())){
                fiksi.setSelected(true);
            }else{
                nonfiksi.setSelected(true);
            }
            penulis.setText(tData.getValueAt(baris, 5).toString());
            sinopsis.setText(tData.getValueAt(baris, 6).toString());
            
        }
    }//GEN-LAST:event_tDataMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clear;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JRadioButton fiksi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField judul;
    private javax.swing.JTextField nomor;
    private javax.swing.JRadioButton nonfiksi;
    private javax.swing.JTextField penerbit;
    private javax.swing.JTextField penulis;
    private javax.swing.JButton refresh;
    private javax.swing.JButton save;
    private javax.swing.JTextArea sinopsis;
    private javax.swing.JTable tData;
    private javax.swing.JTextField tahun;
    // End of variables declaration//GEN-END:variables

    private void selectData() {
         //To change body of generated methods, choose Tools | Templates.
         String kolom[]= {"no","buku","penerbit","tahun","genre","penulis","sinopsis"};
         DefaultTableModel dtm = new DefaultTableModel(null, kolom);
         String SQL = "SELECT * FROM tb_buku";
         ResultSet rs = KoneksiDB.executeQuery(SQL);
         try{
             while(rs.next()){
                 String No = rs.getString(1);
                 String Buku = rs.getString(2);
                 String Penerbit = rs.getString(3);
                 String Tahun = rs.getString(4);
                 String Genre ="";
                 if("Fiksi".equals(rs.getString(5))){
                     Genre = "Fiksi";
                 }else {
                     Genre = "Nonfiksi";
                 }
                 String Penulis = rs.getString(6);
                 String Sinopsis = rs.getString(7);
                 String data[]= {No,Buku,Penerbit,Tahun,Genre,Penulis,Sinopsis};
                 dtm.addRow(data);
             }
         }catch(SQLException ex){
             Logger.getLogger(frmMain.class.getName()).log(Level.SEVERE, null, ex);
         }
         tData.setModel(dtm);
    }
}
